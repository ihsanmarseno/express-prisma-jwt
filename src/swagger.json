{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo List API",
    "description": "Todo List API with Express and Prisma",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://apitodolist-prisma.vercel.app/"
    },
    {
      "url": "http://localhost:5000"
    }
  ],

  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "description": "Login for authentication",
        "summary": "Login for authentication",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "ihsan@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "ihsan12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "description": "Register for authentication",
        "summary": "Register for POST data authentication",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "ihsanmarseno"
                  },
                  "email": {
                    "type": "string",
                    "example": "ihsan@gmail.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "ihsan12345"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/create": {
      "post": {
        "tags": ["Tasks"],
        "description": "Create a new task. Requires Authorization.",
        "summary": "Create task with some data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tasks/": {
      "get": {
        "tags": ["Tasks"],
        "description": "Get tasks. Requires Authorization.",
        "summary": "Get tasks with some query (in_progress, overdue, done)",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["in_progress", "done", "overdue"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tasks/delete/{id}": {
      "delete": {
        "tags": ["Tasks"],
        "description": "Delete a task by ID. Requires Authorization.",
        "summary": "Delete task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tasks/update/{id}": {
      "put": {
        "tags": ["Tasks"],
        "description": "Update a task by ID. Requires Authorization.",
        "summary": "Update task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Task"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/tasks/update-status/{id}": {
      "put": {
        "tags": ["Tasks"],
        "description": "Update status of a task by ID. Requires Authorization.",
        "summary": "Update status of task by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "done"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "name": "Authorization",
        "in": "header",
        "scheme": "bearer"
      }
    }
  }
}
